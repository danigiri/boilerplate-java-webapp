<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cat.calidos.boilerplate</groupId>
	<artifactId>boilerplate-java-webapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Boilerplate java webapp - NAME HERE</name>
	<description>ENTER DESCRIPTION HERE</description>
	<inceptionYear>2024</inceptionYear>


	<properties>
		<!-- JAVA VERSION -->
		<maven.compiler.release>21</maven.compiler.release>

		<!-- JETTY PROPERTIES -->
		<jetty-version>12.0.15</jetty-version>
		<servlet-api-version>6.0.0</servlet-api-version>
		<jetty-http-port>8080</jetty-http-port>
		<jetty-stop-port>8091</jetty-stop-port>
		<jetty-context-path>/</jetty-context-path>

		<!-- DEPENDENCY INJECTION: DAGGER2 -->
		<dagger-2-version>2.52</dagger-2-version>

		<!-- TEMPLATING -->
		<freemarker-version>2.3.33</freemarker-version>

		<!-- JSON HANDLING -->
		<jackson-2-version>2.17.2</jackson-2-version>

		<!-- UTILITIES -->
		<commons-io-version>2.18.0</commons-io-version>

		<!-- TESTING -->
		<jupiter-version>5.11.3</jupiter-version>
		<mockito-version>5.14.2</mockito-version>

		<!-- SOURCE FORMATTING -->
		<spotless.version>2.44.0.BETA2</spotless.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- LOGGING -->
		<slf4j-api-version>2.0.13</slf4j-api-version>

		<!-- GIT OPTIONS -->
		<scm.host_>github.com</scm.host_>
		<developer.id_>danigiri</developer.id_>
	</properties>

	<scm>
		<connection>scm:git:git@${scm.host_}:${developer.id_}/morfeu.git</connection>
		<url>scm:git:git@${scm.host_}:${developer.id_}/${project.artifactId}.git</url>
		<developerConnection>
			scm:git:git@${scm.host_}:${developer.id_}/${project.artifactId}.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<build>


		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes> <!-- not copied, not filtered -->
					<exclude>jdt-codeformat.xml</exclude>
					<exclude>docker/**</exclude>
					<exclude>jetty/**</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>

			<!-- ////////// COMPILE PHASE /////////////////// -->
			<plugin> <!-- so we extrapolate properties for mockito argline -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>properties</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin><!--
				java compilation options -->
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<!-- DAGGER2 -->
					<annotationProcessorPaths>
						<path>
							<groupId>com.google.dagger</groupId>
							<artifactId>dagger-compiler</artifactId>
							<version>${dagger-2-version}</version>
						</path>
					</annotationProcessorPaths>
					<!-- DAGGER2 -->
					<generatedSourcesDirectory>
						target/generated-sources/annotations</generatedSourcesDirectory>
				</configuration>
			</plugin>

			<!-- ////////// TEST PHASE ////////////////////// -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<excludes>	<!-- SKIP IN UNIT TESTING -->
						<exclude>**/*IntTest*</exclude>
						<exclude>**/*UITest*</exclude>
						<exclude>**/*ComponentTest*</exclude>
					</excludes>
					<argLine>-javaagent:${org.mockito:mockito-core:jar}</argLine>
				</configuration>
			</plugin>

			<!-- ////////// PACKAGE PHASE /////////////////// -->
			<plugin>	<!--
				mvn package war:war install -DarchiveClasses=true
				-DattachClasses=true -DskipITs -DskipTests=true -Djetty.skip -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.4.0</version>
				<configuration>
					<!-- additional  resources to add -->
					<webResources>
						<!--resource>
							<directory>
								${project.build.outputDirectory}/test-resources</directory>
							<targetPath>target/test-classes/test-resources</targetPath>
						</resource-->
					</webResources>
					<!-- creates a jar with the classes and attaches an artifact -->
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>

			<!-- ////////// INTEGRATION-TEST PHASES ///////// -->
			<plugin> <!-- this ensures they are set before jetty starts -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>set-system-properties</goal>
						</goals>
						<configuration>
							<properties>
								<property>
									<!--  / at the end -->
									<name>__SAVE_PREFIX</name> 
									<value>${project.build.directory}/</value>
								</property>
							</properties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty.ee10</groupId>
				<artifactId>jetty-ee10-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<httpConnector>
						<port>${jetty-http-port}</port>
					</httpConnector>
					<stopPort>${jetty-stop-port}</stopPort>
					<scan>1</scan>
					<stopKey>STOP</stopKey>
					<webApp>
						<contextPath>${jetty-context-path}</contextPath>
						<!-- use one of those override default src/main/webapp
						for static content -->
						<!--<baseResource></baseResource>-->
						<!--resourceBases>
								<resourceBase>${project.build.outputDirectory}</resourceBase>
						</resourceBases-->
					</webApp>
				</configuration>
				<executions>
					<!-- start jetty when target is integration testing -->
					<execution>
						<id>start-jetty-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>	<!-- stop jetty when completed integration
						testing-->
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<configuration>
							<stopKey>STOP</stopKey>
							<stopPort>${jetty-stop-port}</stopPort>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- failsafe will run all int tests, and check outcome in
			verify phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<systemPropertyVariables>
						<TMP_FOLDER>
							${project.build.directory}/integration-tests-tmp</TMP_FOLDER>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<!--goal>verify</goal-->
						</goals>
						<configuration>
							<includes>
								<include>**/*IntTest*</include>
								<include>**/*UITest*</include>
								<include>**/*ComponentTest*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- ////////// VERIFY PHASE //////////////////// -->
			<!-- code formatting -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<java>
						<eclipse>
							<file>
								${project.basedir}/src/main/resources/editor/jdt-codeformat.xml</file>
						</eclipse>
						<removeUnusedImports />
					</java>
				</configuration>
				<executions>
					<execution>
						<goals>	<!-- run spotless when verify is invoked -->
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- DEPENDENCY INJECTION -->
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger</artifactId>
			<version>${dagger-2-version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger-producers</artifactId>
			<version>${dagger-2-version}</version>
		</dependency>
		<dependency><!-- (optionals not  in the final WAR archive) -->
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger-compiler</artifactId>
			<version>${dagger-2-version}</version>
			<optional>true</optional>
		</dependency>

		<!-- UNIT TESTING -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${jupiter-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JETTY RUNTIME -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- HTTP CLIENT -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-client</artifactId>
			<version>${jetty-version}</version>
		</dependency>

		<!-- UTILS -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io-version}</version>
		</dependency>

		<!-- LOGGING -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-slf4j-impl</artifactId>
			<version>${jetty-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api-version}</version>
		</dependency>

	</dependencies>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>Copyright (C) 2024 Daniel Giribet</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>danigiri</id>
			<name>Daniel Giribet</name>
			<email>dani AT calidos DOT cat</email>
			<url>https://dani.calidos.cat</url>
			<roles>
				<role>creator</role>
				<role>developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>


</project>
